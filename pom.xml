<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.robert.learn</groupId>
	<artifactId>learn-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>learn-parent</name>
	<url>http://maven.apache.org</url>

	<repositories>
		<repository>
			<id>central</id>
			<name>Public Repositories</name>
			<url>http://127.0.0.1:8081/repository/maven-public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<!-- mvn clean package -U -->
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- spring版本号 -->
		<spring.version>4.3.7.RELEASE</spring.version>
		<!-- mybatis版本号 -->
		<mybatis.version>3.4.2</mybatis.version>
		<mybatis-spring.version>1.3.0</mybatis-spring.version>
		<!-- log4j日志文件管理包版本 -->
		<slf4j.version>1.7.7</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		<!--单元测试 -->
		<junit.version>4.12</junit.version>
		<servlet.version>3.1.0</servlet.version>
	</properties>

	<dependencyManagement>

		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!--持久化——模型及数据访问层 -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring.version}}</version>
			</dependency>
			<!--数据连接池 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>1.0.18</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.38</version>
			</dependency>
			<!-- com.robert.mdbinc.model.spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<!--servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- jsp -->
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>javax.servlet.jsp-api</artifactId>
				<version>2.3.1</version>
			</dependency>
			<!-- jstl -->
			<dependency>
				<groupId>javax.servlet.jsp.jstl</groupId>
				<artifactId>jstl-api</artifactId>
				<version>1.2</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.web</groupId>
				<artifactId>javax.servlet.jsp.jstl</artifactId>
				<version>1.2.2</version>
				<scope>compile</scope>
				<exclusions>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet.jsp</groupId>
						<artifactId>jsp-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet.jsp.jstl</groupId>
						<artifactId>jstl-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.google.code.simple-spring-memcached</groupId>
				<artifactId>simple-spring-memcached</artifactId>
				<version>3.6.0</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>

			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>2.3.23</version>
			</dependency>

			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk16</artifactId>
				<version>1.46</version>
			</dependency>

			<dependency>
				<groupId>apache-log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.14</version>
			</dependency>

			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>1.7</version>
			</dependency>

			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>1.4.7</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.8.7</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>2.8.7</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.8.7</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.31</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>

				<!-- 编译插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>1.0-alpha-2</version>
					<executions>
						<execution>
							<id>default-cli</id>
							<phase>initialize</phase>
							<goals>
								<goal>read-project-properties</goal>
								<goal>write-project-properties</goal>
							</goals>
							<configuration>
								<files>
									<!--<file>${user.dir}/profiles/dev/my.properties</file> -->
									<file>${project.basedir}/src/main/resources/${profile.id}/${profile.id}.properties</file>
								</files>
								<!--输出全部配置项到指定文件 -->
								<outputFile>${project.basedir}/src/main/resources/com.robert.mdbinc.model.jdbc/com.robert.mdbinc.model.jdbc.properties</outputFile>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation> <!-- 默认激活，即默认值 -->
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<profile.id>com.robert.mdbinc.model.remote</profile.id>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<profile.id>com.robert.mdbinc.model.local</profile.id>
			</properties>
		</profile>

		<!-- web服务器 -->
		<profile>
			<id>jetty</id>
			<build>
				<plugins>
					<!-- jetty服务器插件 -->
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>9.2.7.v20150116</version>
						<configuration>
							<httpConnector>
								<port>9779</port>
							</httpConnector>
							<stopKey>shutdown</stopKey>
							<stopPort>9966</stopPort>
							<!-- 自动热部署：默认值是 0。大于 0 的数值表示开启，0 表示关闭，单位为秒。以配置数值为一个周期，自动的扫描文件检查其内容是否有变化，如果发现文件的 
								内容被改变，则自动重新部署运用。 -->
							<scanIntervalSeconds>2</scanIntervalSeconds>
							<!-- 手动重加载 -->
							<!-- <reload>manual</reload> -->
							<dumpOnStart>true</dumpOnStart>
							<webApp>
								<contextPath>/</contextPath>
								<resourceBases>
									<!-- 项目的静态资源文件目录默认是 src/main/webapp -->
									<resourceBase>${project.basedir}/src/main/webapp</resourceBase>
									<!-- <resourceBase>${project.basedir}/commons</resourceBase> -->
								</resourceBases>
							</webApp>
							<!-- 访问日志 -->
							<requestLog implementation="org.eclipse.jetty.server.NCSARequestLog">
								<filename>target/access-yyyy_mm_dd.log</filename>
								<filenameDateFormat>yyyy_MM_dd</filenameDateFormat>
								<logDateFormat>yyyy-MM-dd HH:mm:ss</logDateFormat>
								<logTimeZone>GMT+8:00</logTimeZone>
								<append>true</append>
								<logServer>true</logServer>
								<retainDays>120</retainDays>
								<logCookies>true</logCookies>
							</requestLog>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>Releases</name>
			<url>http://127.0.0.1:8081/repository/robert-releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>Snapshot</name>
			<url>http://http://127.0.0.1:8081/repository/robert-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<modules>
		<module>learn-mybatis</module>
		<module>learn-shiro</module>
	</modules>
</project>